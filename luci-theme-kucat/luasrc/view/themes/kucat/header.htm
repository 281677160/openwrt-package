 <%#
    Copyright 2019-2023 sirpdboy <sirpdboy@qq.com>
	luci-theme-material: 
	Copyright 2015 Lutty Yang <lutty@wcan.in>
	luci-theme-bootstrap:
	Copyright 2008 Steven Barth <steven@midlink.org>
	Copyright 2008 Jo-Philipp Wich <jow@openwrt.org>
	Copyright 2012 David Menting <david@nut-bolt.nl>

	MUI:
	https://github.com/muicss/mui
	Licensed to the public under the Apache License 2.0
-%>

<%
	local ver = require "luci.version"
	local sys  = require "luci.sys"
	local util = require "luci.util"
	local http = require "luci.http"
	local disp = require "luci.dispatcher"
	local json 	= require "luci.jsonc"
	local fs = require "nixio.fs"
	local nutil = require "nixio.util"
	local uci = require 'luci.model.uci'.cursor()
	local boardinfo = util.ubus("system", "board")
	local urlencode = luci.http.protocol and luci.http.protocol.urlencode or luci.util.urlencode
	local request  = disp.context.path
	local request2 = disp.context.request

	local category = request[1]
	local cattree  = category and disp.node(category)

	local leaf = request2[#request2]

	local tree = disp.node()
	local node = disp.context.dispatched

	local categories = disp.node_childs(tree)
	local currentNode = luci.dispatcher.context.path
	local c = tree
	local i, r
	
	function glob(...)
		local iter, code, msg = fs.glob(...)
		if iter then
			return nutil.consume(iter)
		else
			return nil, code, msg
		end
	end
    function getExtension(str)
		return str:match(".+%.(%w+)$")
	end
	-- tag all nodes leading to this page
	for i, r in ipairs(request) do
		if c.nodes and c.nodes[r] then
			c = c.nodes[r]
			c._menu_selected = true
		end
	end

	-- send as HTML5
	http.prepare_content("text/html")

	local function nodeurl(prefix, name, query)
		local u = url(prefix, name)
		if query then
			u = u .. http.build_querystring(query)
		end
		return pcdata(u)
	end

	local function render_tabmenu(prefix, node, level)
		if not level then
			level = 1
		end

		local childs = disp.node_childs(node)
		if #childs > 0 then
			if level > 2 then
				write('<ul class="tabs">')
			end

			local selected_node
			local selected_name
			local i, v

			for i, v in ipairs(childs) do
				local nnode = node.nodes[v]
				if nnode._menu_selected then
					selected_node = nnode
					selected_name = v
				end

				if level > 2 then
					write('<li class="tabmenu-item-%s %s"><a href="%s">%s</a></li>' %{
						v, (nnode._menu_selected or (node.leaf and v == leaf)) and 'active' or '',
						nodeurl(prefix, v, nnode.query),
						striptags(translate(nnode.title))
					})
				end
			end

			if level > 2 then
				write('</ul>')
			end

			if selected_node then
				render_tabmenu(prefix .. "/" .. selected_name, selected_node, level + 1)
			end
		end
	end

	local function render_submenu(prefix,parent, node)
		local childs = disp.node_childs(node)
		if #childs > 0 then
			local active = (currentNode[2] == parent) and "active" or ""
			local display = (currentNode[2] == parent) and 'style="display: block;"' or ""
			
			write('<ul class="slide-menu %s" %s>' %{
				active,
				display
			})
			for i, r in ipairs(childs) do
				local nnode = node.nodes[r]
				local title = pcdata(striptags(translate(nnode.title)))
				local subactive = (currentNode[3] == r) and 'class="active"' or ""
				write('<li %s><a data-title="%s" href="%s">%s</a></li>' %{
					subactive,
					title,
					nodeurl(prefix, r, nnode.query),
					title
				})
			end

			write('</ul>')
		end
	end

	local function render_topmenu()
		local childs = disp.node_childs(cattree)
		if #childs > 0 then
			write('<ul class="nav">')

			for i, r in ipairs(childs) do
				local nnode = cattree.nodes[r]
				local grandchildren = disp.node_childs(nnode)

				if #grandchildren > 0 then
					local active = (currentNode[2] == r) and "active" or ""
					local title = pcdata(striptags(translate(nnode.title)))
                                        local en_title = pcdata(striptags(string.gsub(nnode.title," ","_")))
					write('<li class="slide"><a class="menu %s" data-title="%s" href="#">%s</a>' %{
						active,
						en_title,
						title
					})

					render_submenu(category .. "/" .. r,r, nnode)
					write('</li>')
				else
					local title = pcdata(striptags(translate(nnode.title)))
                                        local en_title = pcdata(striptags(nnode.title))
					write('<li  class="slide"><a  class="menu exit" data-title="%s" href="%s">%s</a></li>' %{
						en_title,
						nodeurl(category, r, nnode.query),
						title
					})
				end
			end

			write('</ul>')
		end
	end

	local function render_changes()
		if tree.nodes[category] and tree.nodes[category].ucidata then
			local ucichanges = 0
			for i, j in pairs(require("luci.model.uci").cursor():changes()) do
				for k, l in pairs(j) do
					for m, n in pairs(l) do
						ucichanges = ucichanges + 1;
					end
				end
			end

			if ucichanges > 0 then
				write('<a class="uci_change_indicator label notice" href="%s?redir=%s">%s: %d</a>' %{
					url(category, 'uci/changes'),
					http.urlencode(http.formvalue('redir') or table.concat(disp.context.request, "/")),
					translate('Unsaved Changes'),
					ucichanges
				})
			end
		end
	end
	
	local theme_dir = resource .. "/background/"
	if not fs.access("/www" .. resource .. "/background/") then
	   local theme_dir = media .. "/background/"
	end
  	local remote_bg_url="http://www.bing.com/HPImageArchive.aspx?format=js&idx=0&n=3&mkt=en-US"
	local bingUrl = "http://www.bing.com/"
	local dark_css = fs.readfile('/www/luci-static/kucat/css/dark.css')
	local bg_url = media.."/img/bg1.jpg"
	local bar="/cgi-bin/luci/admin/"
	local mode = 'light'
	local primary = '#3cba92'
	local primary_body = '#f8f8f8'
	local primary_rgb = '217,217,217'
	local primary_rgbs = '179, 179, 179'
	local primary_rgb_ts = '0.3'
    local home = "overview" 
    local user = "admin" 
    local ssr = "shadowsocksr" 
	local advanced = "netwizard"
    local gohome = bar .. "status/"  ..home
    local gouser = bar .. "system/"  ..user
    local gossr = bar .. "services/"  ..ssr
    local goadvanced = bar .. "system/"  ..advanced
	local background = '0' 
	local fontd = '1.2rem' 
	local fontz = '0.92rem' 
	local fontx = '0.875rem' 
	if fs.access('/etc/config/advancedplus') then
		primary = uci:get_first('advancedplus', 'basic', 'primary')
		primary_body = uci:get_first('advancedplus', 'basic', 'primary_body')
		primary_rgb = uci:get_first('advancedplus', 'basic', 'primary_rgb')
		primary_rgbs = uci:get_first('advancedplus', 'basic', 'primary_rgbs')
		primary_rgb_ts = uci:get_first('advancedplus', 'basic', 'primary_rgb_ts')
		mode = uci:get_first('advancedplus', 'basic', 'mode')
		advanced = "advancedplus"
		home =  uci:get_first('advancedplus', 'basic', 'gohome')
		user = uci:get_first('advancedplus', 'basic', 'gouser')
		ssr =  uci:get_first('advancedplus', 'basic', 'gossr')
        goadvanced = bar .. "system/"  ..advanced
		gohome = bar .. "status/" .. home
		gouser = bar .. "system/" .. user
		gossr = bar .. "services/" .. ssr
		background = uci:get_first('advancedplus', 'basic', 'background')
		fontd = uci:get_first('advancedplus', 'basic', 'font_d')
		fontz = uci:get_first('advancedplus', 'basic', 'font_z')
		fontx = uci:get_first('advancedplus', 'basic', 'font_x')
		mode_color = primary
	end
	
function getBing()
    local bing = sys.exec("wget --timeout=0.5 -qO- '%s'" %remote_bg_url)
    if (bing and bing ~= '') then
        bg_url = bingUrl .. json.parse(bing).images[1].url
    end
end
function downunsplashUrl()
    local check = 1
    if fs.access('/tmp/kucatunsplash.tmp') then
        local localtime = sys.exec("a=$(date +%Y%m%d) && cat /tmp/kucatunsplash.tmp | grep $a")
        if localtime then 
                check = 0 
        end
    end
    if check == 1 or not fs.access('/www/luci-static/kucat/img/down2.jpg') then
        io.popen("(curl -k -L \"$(curl -s https://instant.unsplash.com | grep -oE '\"raw\":\".*?\",\"full\"'| grep -o 'https://.*,' | sed 's/\",//g' | awk -F '\"raw\"' '{printf $(NF)}' | sed 's/:\"//g')\&q=80\&w=1680\" -o /www/luci-static/kucat/img/down2.jpg >/dev/null 2>&1) &")
        sys.exec("date +%Y%m%d  > /tmp/kucatunsplash.tmp")
    end
    if fs.access('/www/luci-static/kucat/img/down2.jpg') then
        bg_url = media .. "/img/down2.jpg"
    end
end

function downbingUrl()
    local check = 1
    if fs.access('/tmp/kucatbing.tmp') then
        local localtime = sys.exec("cat /tmp/kucatbing.tmp | grep `date +%Y%m%d`")
        if localtime then 
						check = 0 
				end
    end
    if check == 1 or not fs.access('/www/luci-static/kucat/img/down3.jpg') then
            local dbing = sys.exec("curl -s 'http://www.bing.com/HPImageArchive.aspx?format=js&idx=0&n=3&mkt=en-US'" )
            if (dbing and dbing ~= '') then
               bingUrl = bingUrl .. json.parse(dbing).images[1].url
            end
        sys.exec("curl -kLfsm 5 -o /www/luci-static/kucat/img/down3.jpg  '%s'" %bingUrl)
        sys.exec("date +%Y%m%d > /tmp/kucatbing.tmp")
    end
    if fs.access('/www/luci-static/kucat/img/down3.jpg') then
        bg_url = media .. "/img/down3.jpg"
    end
end

function downIcibaUrl()
    local check = 1
    if fs.access('/tmp/kucaticiba.tmp') then
        local localtime = sys.exec("cat /tmp/kucaticiba.tmp | grep `date +%Y%m%d`")
        if localtime then
           check = 0
        end
    end
    if check == 1 or not fs.access('/www/luci-static/kucat/img/down4.jpg') then
io.popen("curl -kLfsm 3 -o /www/luci-static/kucat/img/down4.jpg  $(curl -s 'https://zhouxiaoben.info/iciba/dsapi' | awk -F 'picture4\":\"' '{print $2}' | awk -F '\"' '{print $1}') ")
        sys.exec("date +%Y%m%d  > /tmp/kucaticiba.tmp")
    end
    if fs.access('/www/luci-static/kucat/img/down4.jpg') then
        bg_url = media .. "/img/down4.jpg"
    end
end

function downbirdUrl()
    local check = 1
    if fs.access('/tmp/kucatbird.tmp') then
        local localtime = sys.exec("cat /tmp/kucatbird.tmp | grep `date +%Y%m%d` ")
        if localtime then 
            check = 0
        end
    end
    if check == 1 or not fs.access('/www/luci-static/kucat/img/down5.jpg') then
        math.randomseed(tostring(os.time()):reverse():sub(1,9))
        local j = math.random(1, 9)
        local i = math.random(1, 400)
        local bUrl = "http://wp.birdpaper.com.cn/intf/search?content=4k&pageno=" .. i .. "&count=9"
        bUrl = sys.exec("curl -s  '%s'  | awk -F '\"count\":9' '{print $2}' | awk -F ',\"processTime\"' '{print $1}' | sed 's#,#{#' " %bUrl)
        if (bUrl and bUrl ~= '') then
            bUrl = "" .. json.parse(bUrl).list[j].url
        end
        io.popen("curl -kLfsm 3 -o /www/luci-static/kucat/img/down5.jpg '%s'" %bUrl )
        sys.exec("date +%Y%m%d  > /tmp/kucatbird.tmp")
    end
    if fs.access('/www/luci-static/kucat/img/down5.jpg') then
        bg_url = media .. "/img/down5.jpg"
    end
end

if ( background == "0" ) then
		math.randomseed(os.time())
		local bgcount = 0
		local currentBg = {}
		local bgs,attr = {}
		for i, f in ipairs(glob("/www" .. theme_dir .. "*")) do
					attr = fs.stat(f)
					if attr then
						local ext = getExtension(fs.basename(f))
						if ext == "jpg" or ext == "png" or ext == "gif"  then
								local bg = {}
								bg.type = ext
								bg.url = theme_dir .. fs.basename(f)
								table.insert(bgs,bg)
								bgcount = bgcount + 1
						end
					end
		end
		if bgcount > 0 then
		    currentBg = bgs[math.random(1,bgcount)]
		    bg_url = currentBg.url
		end
elseif  ( background == "1" )  then
		    pcall(getBing)
elseif  ( background == "2" )  then
		    pcall(downunsplashUrl)
elseif background == "3" then
		    pcall(downbingUrl)
elseif background == "4" then
		    pcall(downIcibaUrl)
elseif background == "5" then
		    pcall(downbirdUrl)
end
%>

<!DOCTYPE html>
<html lang="<%=luci.i18n.context.lang%>">
<head>
	<meta charset="utf-8">
	<title>
		<%=striptags( (boardinfo.hostname or "?") .. ( (node and node.title) and ' - ' .. translate(node.title) or '')) %>
		- LuCI</title>
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport" />
	<meta name="format-detection" content="telephone=no, email=no" />
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="mobile-web-app-capable" content="yes">
    <meta name="x5-fullscreen" content="true">
    <meta name="full-screen" content="yes">
    <meta name="x5-page-mode" content="app">
    <meta name="browsermode" content="application">
    <meta name="msapplication-tap-highlight" content="no">
	<meta name="msapplication-TileColor" content="<%=bar_color%>">
	<meta name="theme-color" media="(prefers-color-scheme: dark)" content="black">
	<meta name="application-name" content="<%=striptags( (boardinfo.hostname or "?") ) %> - LuCI">
	<meta name="apple-mobile-web-app-title" content="<%=striptags( (boardinfo.hostname or "?") ) %> - LuCI">
	<meta name="msapplication-TileImage" content="<%=media%>/logo.png"/>
	<meta name="msapplication-TileColor" content="<%=bar_color%>">
	<meta name="theme-color" content="<%=bar_color%>">
	<link rel="icon" href="<%=media%>/logo.png" sizes="144x144">
	<link rel="apple-touch-icon-precomposed" href="<%=media%>/logo.png" sizes="144x144">
	<link rel="stylesheet" href="<%=media%>/css/style.css?v=<%=math.random(1,100000)%>">
	<style title="text/css">
	<% if mode == 'dark' then %>
		<%=dark_css%>
	<% end -%>
	<% if fs.access('/etc/config/advancedplus') then %>
	:root {
		--primary: <%=primary%>;
		--primary-body:<%=primary_body%>;
		--primary-rgb: <%=primary_rgb%>;
		--primary-rgbs: <%=primary_rgbs%>;
		--primary-rgb-ts: <%=primary_rgb_ts%>;
		--font-d: <%=fontd%>;
		--font-z: <%=fontz%>;
		--font-x: <%=fontx%>;
	}
	
	img[src*="/luci-static/resources/cbi/add.gif"] {
    background-image: url(<%=media%>/img/add.png);
	}

	img[src*="/luci-static/resources/cbi/remove.gif"] {
    background-image: url(<%=media%>/img/del.png);
	}

	img[src*="/luci-static/resources/cbi/reload.gif"] {
    background-image: url(<%=media%>/img/reload.png);
	}
	<% end -%>
	<% if css then %>
	    <%=css %>
	<% end -%>
	 </style>
	<link rel="shortcut icon" href="<%=media%>/favicon.ico"> 
	<% if node and node.css then %>
	<link rel="stylesheet" href="<%=resource%>/<%=node.css%>">
	<% end -%>
	<script src="<%=resource%>/cbi.js<%# ?v=PKG_VERSION %>"></script>
	<script src="<%=resource%>/xhr.js<%# ?v=PKG_VERSION %>"></script>
	<script src="<%=media%>/js/jquery.min.js<%# ?v=PKG_VERSION %>"></script>
</head>
<body class="lang_<%=luci.i18n.context.lang%> <%- if node then %> <%= striptags( node.title ) %><%- end %> <% if luci.dispatcher.context.authsession then %>logged-in<% end %> <%=mode %> ">
<header class="bar-primary">
		<div id="header-bar-left" class="container-bar-left">
			<a class="labelbar pdboy-closebar" href="javascript:void(0)" onclick="pdclosebar()" title="Close" ></a>
  			<a class="labelbar pdboy-gohome" href="<%=gohome%>" title="<%=home%>"></a>
  		    <a class="labelbar pdboy-goadvanced" href="<%=goadvanced%>" title="<%=advanced%>"></a>
  		    <a class="labelbar pdboy-gocontrol" href="<%=url("admin/control/parentcontrol")%>" title="<%:Parent Control%>"></a>
  			<a class="labelbar pdboy-gossr" href="<%=gossr%>" title="<%=ssr%>"></a>
  		    <a class="labelbar pdboy-gonet" href="<%=url("admin/network/network")%>" title="<%:Network%>"></a>
  		    <a class="labelbar pdboy-gouser" href="<%=gouser%>" title="<%=user%>"></a>
  		    <a class="labelbar pdboy-gopoweroff" href="<%=url("admin/system/reboot")%>" title="<%:Reboot%>"></a>
		</div>
		<div id="header-bar-right" class="container-bar-right">
		    <a class="labelbar pdboy-openbar" href="javascript:void(0)" title="Open" onclick="pdopenbar()"></a>
		</div>
</header>
<div class="main">
    <div class="main-left">
        <div class="sidenav-header d-flex align-items-center">
            <a class="brand" href="#"><%=boardinfo.hostname or "?"%></a> 
        </div>
        <% render_topmenu() %>
    </div>
	<div class="main-right">
            <header class="bg-primary">
                <div class="fill">
                    <div class="container">
                        <a class="showSide"></a>
                        <a class="brand" href="#"><%=boardinfo.hostname or "?"%></a>
                        <div class="pull-right">
                            <% render_changes() %>
                            <span id="xhr_poll_status" style="display:none" onclick="XHR.running() ? XHR.halt() : XHR.run()">
                                <a  class="pdboy-status_on" id="xhr_poll_status_on"  title="Disable Refresh"></a>
                                <a  class="pdboy-status_off" id="xhr_poll_status_off" style="display:none"  title="Enable Refresh"></a>
                            </span>
                           <span  title="Logout"> <a class="pdboy-qlogout" href="<%=url("admin/logout")%>"></a></span>
                        </div>
                    </div>
                </div>
            </header>
		<div class="darkMask"></div>
		<div class="login-bg" style="background-image:url(<%=bg_url%>)"></div>
		<div id="maincontent">
			<div class="container">
				<%- if luci.sys.process.info("uid") == 0 and luci.sys.user.getuser("root") and not luci.sys.user.getpasswd("root") then -%>
					<div class="alert-message warning">
						<h4><%:No password set!%></h4>
						<p><%:There is no password set on this router. Please configure a root password to protect the web interface and enable SSH.%></p>
						<div class="right"><a class="btn" href="<%=url("admin/system/admin")%>"><%:Go to password configuration...%></a></div>
					</div>
				<%- end -%>

				<noscript>
					<div class="alert-message warning">
						<h4><%:JavaScript required!%></h4>
						<p><%:You must enable JavaScript in your browser or LuCI will not work properly.%></p>
					</div>
				</noscript>

				<% if category then render_tabmenu(category, cattree) end %>
