<%+cbi/valueheader%>
<script src="/jd-dailybonus/jquery.min.js"></script>
<script src="/jd-dailybonus/qrcode.min.js"></script>
<script type="text/javascript">
var jq=$.noConflict();
</script>
<style>
	.modals-bg {
		position: fixed;
		z-index: 999;
		width: 100%;
		height: 100%;
		left: 0;
		top: 0;
		background: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease-in-out;
        transform: scale(1);
	}

	.modals {
		position: fixed;
		z-index: 100;
		width: 60%;
		height: 500px;
		background: #172b4d;
		left: 20%;
		top: 15%;
		color: #fff;
		border-radius: 10px;
		padding: 20px;

		box-sizing: border-box;
		-moz-box-sizing: border-box;
		/* Firefox */
		-webkit-box-sizing: border-box;
		/* Safari */
        transition: all 0.3s ease-in-out;
        transform: scale(1);
	}
    .modals-bg.hide {
        visibility: hidden;
        opacity: 0;
    }



    .modals.hide {
        visibility: hidden;
        opacity: 0;
        transform: scale(0.5);
    }


	.modals h2 {
		color: #fff;
		background: transparent;
		padding: 0 !important;
	}

	.modals h3 {
		font-size: 14px;
		color: #f5365c !important;
		background: transparent;
		margin: 0 0 1em 0;
		padding: 0 0 0.5em 0;
	}

	#log_content3 {
		border: 0;
		width: 99%;
		height: calc(100% - 4rem);
		font-family: 'Lucida Console';
		font-size: 11px;
		background: transparent;
		color: #FFFFFF;
		outline: none;
		padding-left: 3px;
		padding-right: 22px;
		overflow: hidden
	}

	.cbi-value-version {
		word-wrap: break-word;
		font-size: 0.875rem;
		line-height: 1.6;
		color: #5e72e4;
		font-weight: bold;
		padding: .7rem;
		padding-left: 0;
		width: 23rem;
		float: left;
		text-align: left;
		display: table-cell;
	}
    
    #qrcontainer {
        position: fixed;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        z-index: 5000;
        display: flex;
        align-items: center;
        justify-content: center;
        background: rgba(255, 255, 255, .8);
        text-align: center;
        transition: all 0.3s;
    }
    #qrcontainer.hidden{
        opacity: 0;
        visibility: hidden;
    }

    #qrcontainer .qframe {
        background-color: #ffffff;
        padding: 1rem;
        border-radius: 0.5rem;
        border: #6D8A88 1px solid;
        -webkit-box-shadow: 0px 0px 7px 3px rgba(0, 0, 0, 0.2);
        box-shadow: 0px 0px 7px 3px rgba(0, 0, 0, 0.2);
        position: relative;
    }
    #qrcontainer .qframe #refresh_qrcode{
        width: 256px;
        height: 256px;
        position: absolute;
        background-color: rgba(0, 0, 0, 0.5);
        left: 1rem;
        top: 1rem;
        color: #ffffff;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #qrcontainer .qframe #refresh_qrcode.hidden{
        opacity: 0;
        visibility: hidden;
    }
    #qrcontainer .qframe #refresh_qrcode h3{
        font-weight: normal;
    }
    #qrcontainer .qframe #refresh_qrcode .refresh{
        display: block;
        background: #e4393c;
        width: 80px;
        height: 30px;
        margin: 0 auto;
        line-height: 30px;
        opacity: 1;
        z-index: 19;
        color: #fbfbfb;
        text-decoration: none;
        cursor: pointer;
    }
    #qrcontainer .qframe .info {
        padding: 1rem 0 0 0;
    }

	@media screen and (max-width: 1024px) {
		.modals {
			position: fixed;
			z-index: 100;
			width: 80%;
			height: 500px;
			background: #172b4d;
			left: 10%;
			top: 15%;
			color: #fff;
			border-radius: 10px;
			padding: 20px;
		}
	}

	@media screen and (max-width: 700px) {
		.modals-bg {
			position: fixed;
			z-index: 100000;

		}

		.modals {
			width: 100%;
			height: 100%;
			left: 0;
			top: 0;
		}
	}

</style>
<label class="cbi-value-title"><%= translate("执行") %></label>
<div class="cbi-value-field">
	<input class="cbi-button cbi-button-reload" id="update_service" type="button" size="0"
		value="<%= translate("保存Cookie,并马上进行签到") %>">
</div>

<%+cbi/valuefooter%>

<%+cbi/valueheader%>
<label class="cbi-value-title"><%= translate("更新脚本") %></label>
<div class="cbi-value-field">
	<input class="cbi-button cbi-button-reload" id="update_script" type="button" size="0"
		value="<%= translate("手动检查脚本更新，当前版本：v")..self.version %>">
</div>
<%+cbi/valuefooter%>

<div id="qrcontainer" class="hidden">
    <div class="qframe">
        <div id="refresh_qrcode" class="hidden">
            <div>
                <h3>二维码已失效</h3>
                <div class="refresh">刷新</div>
            </div>
        </div>
        <div id="qrcode"></div>
        <div class="info">请使用京东手机APP扫码</div>
    </div>
</div>

<script type="text/javascript">

	const SAVE_URL = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus","run")%>';
	const CHECK_URL = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus","check_update")%>';
	const QRCODE_URL = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus","qrcode")%>';
	const CHECK_LOGIN_URL = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus","check_login")%>';
	const UPDATE_URL = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus","update")%>';
	const CHECKING_TEXT = '<%= translate("正在检查是否存在新的版本 ...") %>';
	const UPDATING_TEXT = '<%= translate("正在更新脚本，请稍候 ...") %>';
	const NEW_VERSION = '<%= translate("当前已是最新版本。") %>';
	const UPDATE_TEXT = '<%= translate("有新的版本，请点击更新") %>';

	var needUpdate = false;
	var newVersion;
	var _responseLen;
	var noChange = 0;
    var ckid = 0;
	var modal = '<div class="modals-bg hide">' +
		'<div class="modals hide">' +
		'<h2><%:Sign in info%></h2>' +
		'<h3 style="margin-left:0;"><%:Service is running,Please do not refresh!%></h3>' +
		'<textarea cols="63" rows="28" wrap="on" readonly="readonly" id="log_content3" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"></textarea>' +
		'</div>' +
		'</div>';

	//显示并开始刷新订阅
	function update_service() {
		jq("body").append(modal);
        jq(".modals-bg").removeClass("hide");
        setTimeout(function(){
            jq(".modals").removeClass("hide");
        }, 100);
        setTimeout("get_realtime_log();", 500);
	}
	//保存订阅按钮
	jq("#update_service").click(function () {
		let prefix_array = jq(".cbi-input-text").eq(0).attr("id").split(".");
        prefix_array.pop()
		var prefix = prefix_array.join(".")+".";
        let array = jq("form[name*='cbi'").serializeArray()
        var json = {};
        jq.each(array, function () {
            if(this.name.indexOf(prefix) != -1){
                let aname = this.name.replace(prefix, "");
                if (json[aname]) {
                    if (!json[aname].push) {
                        json[aname] = [json[aname]];
                    }
                    json[aname].push(this.value || '');
                } else {
                    json[aname] = this.value || '';
                }
            }
        });
		jq.ajax({
			type: "post",
			url: SAVE_URL,
			dataType: "json",
			data: json,
			success: function (d) {
				if (d.error == 0) {
					update_service();
				} else {
					alert("请填写cookies");
				}
			}
		});
		return false;
	});

	//更新脚本
	jq("#update_script").click(function () {
			check_version()
		return false;
	});

	function updateS(){
		jq("#update_script").attr("disabled", true);
			jq("#update_script").val(UPDATING_TEXT);
			//console.log(data);
			var data = {
				version: jq("#update_script").attr("data-version")
			}
			jq.ajax({
				type: "post",
				url: UPDATE_URL,
				dataType: "json",
				data: data,
				success: function (d) {
					if (d.error == 0) {
						jq("#update_script").val(NEW_VERSION);
						jq(".cbi-value-version").text("v" + newVersion);
					} else {
						jq("#update_script").attr("disabled", false);
						alert("更新错误请重试");
					}
				}
			});
	}


	function get_realtime_log() {
		jq.ajax({
			url: '/JD_DailyBonus.htm?v=' + parseInt(Math.random() * 100000000),
			dataType: 'html',
			error: function (xhr) {
				setTimeout("get_realtime_log();", 1000);
			},
			success: function (response) {
				var retArea = document.getElementById("log_content3");
				if (response.search(" 秒") != -1) {
					noChange++;
				}
				console.log(noChange);
				if (noChange > 10) {
					window.location.href = '<%=luci.dispatcher.build_url("admin", "services", "jd-dailybonus")%>';
					return false;
				} else {
					setTimeout("get_realtime_log();", 250);
				}
				retArea.value = response;
				retArea.scrollTop = retArea.scrollHeight;
				_responseLen = response.length;
			},
			error: function () {
				setTimeout("get_realtime_log();", 500);
			}
		});
	}

	function check_version() {
		jq("#update_script").attr("disabled", true);
		jq("#update_script").val(CHECKING_TEXT);
		jq.ajax({
			url: CHECK_URL,
			dataType: 'json',
			error: function (xhr) {

			},
			success: function (data) {
				if(data.new_version == 501){
					jq("#update_script").attr("disabled", false);
					jq("#update_script").val("无法获取新版本，请重试！");
				}else if (data.new_version > <%= self.version %>) {
					jq("#update_script").attr("disabled", false);
					jq("#update_script").val(UPDATE_TEXT + " v" + data.new_version);
					jq("#update_script").attr("data-version", data.new_version);
					newVersion = data.new_version;
					updateS();
				} else {
                    updateS();
					jq("#update_script").val(NEW_VERSION + " v" + data.new_version);
				}
            }
		});
	}
    
    qrcode = new QRCode(document.getElementById("qrcode"),
                {
                    text: "sample",
                    correctLevel: QRCode.CorrectLevel.L
                });
    
    //获取二维码
    function get_code() {
        let timeStamp = (new Date()).getTime()
        $.get('/qrcode?t='+timeStamp, function (data) {
            if (data.err == 0) {
                jq("#qrcontainer").removeClass("hidden")
                jq("#refresh_qrcode").addClass("hidden")
                qrcode.clear();
                qrcode.makeCode(data.qrcode);
                checkLogin();
            } else {
                Swal.fire({
                    text: data.msg,
                    icon: "error"
                })
            }
        });
    }
    jq(".cookie-button").click(function(){
        ckid = jq(this).attr("data-rel");
        get_code()
        return false;
    })
    
    jq('.refresh').click(get_code);
    
    
    function get_code(){
        let timeStamp = (new Date()).getTime()
        jq.ajax({
			url: QRCODE_URL+"?t="+timeStamp,
			dataType: 'json',
			success: function (data) {
				if(data.error == 0){
					jq("#qrcontainer").removeClass("hidden")
                    jq("#refresh_qrcode").addClass("hidden")
                    console.log(data.data.qrcode_url)
                    qrcode.clear();
                    qrcode.makeCode(data.data.qrcode_url);
                    checkLogin(data.data.check_url,data.data.cookies);
				} else {
                    alert("出错了请重试。")
				}
            }
		});
        return false;
    }
    
    function checkLogin(check_url,cookies){
        var timeId = setInterval(() => {
            let cname = ckid == 1?"cookie":"cookie2"
            jq.post( CHECK_LOGIN_URL, { check_url:check_url,cookies: cookies ,id: cname}, function( data ) {
              if (data.error == 0) {
                    clearInterval(timeId)
                    jq("#qrcontainer").addClass("hidden")
                    jq("#refresh_qrcode").addClass("hidden")
                    let prefix_array = jq(".cbi-input-text").eq(0).attr("id").split(".");
                    prefix_array.pop()
                    let prefix = prefix_array.join(".")+".";
                    console.log("."+prefix+cname,data.cstr);
                    document.getElementById(prefix+cname).value =data.cstr
                } else if (data.error == 21 || data.error == 261) {
                    clearInterval(timeId)
                    jq("#refresh_qrcode").removeClass("hidden")
                }
            }, "json");
        }, 3000)
    }
</script>
