on:
  push:
#     Sequence of patterns matched against refs/tags
    tags:
    - '*' # Tag events

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: checkout codes
        uses: actions/checkout@v1
      - name: build
        id: build_ipk
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=tag_name::${TAG}
          mkdir -p /tmp/luci-lib-docker/usr/lib/lua/luci /tmp/luci-lib-docker/www/
          [ -d $GITHUB_WORKSPACE/collections/luci-lib-docker/luasrc ] && cp -R $GITHUB_WORKSPACE/collections/luci-lib-docker/luasrc/* /tmp/luci-lib-docker/usr/lib/lua/luci/
          [ -d $GITHUB_WORKSPACE/collections/luci-lib-docker/root ] && cp -R $GITHUB_WORKSPACE/collections/luci-lib-docker/root/* /tmp/luci-lib-docker/
          [ -d $GITHUB_WORKSPACE/collections/luci-lib-docker/htdoc ] && cp -R $GITHUB_WORKSPACE/collections/luci-lib-docker/htdoc/* /tmp/luci-lib-docker/www/
          mkdir -p /tmp/luci-lib-docker/CONTROL
          cat >/tmp/luci-lib-docker/CONTROL/control <<EOF
          Package: luci-lib-docker
          Version: ${TAG}
          Depends: luci-lib-jsonc
          Architecture: all
          Maintainer: lisaac<lisaac.cn@gmail.com>
          Section: base
          Priority: optional
          Description: Docker Engine API for LuCI
          Source: http://github.com/lisaac/luci-lib-docker
          EOF
          cat >/tmp/luci-lib-docker/CONTROL/postinst <<EOF
          #!/bin/sh
          rm -rf /tmp/luci-indexcache /tmp/luci-modulecache
          EOF
          chmod +x /tmp/luci-lib-docker/CONTROL/postinst
          wget -O /tmp/ipkg-build https://raw.githubusercontent.com/openwrt/openwrt/master/scripts/ipkg-build && \
          chmod +x /tmp/ipkg-build && \
          /tmp/ipkg-build -o root -g root /tmp/luci-lib-docker /tmp
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: /tmp/luci-lib-docker_${{ steps.build_ipk.outputs.tag_name }}_all.ipk
          asset_name: luci-lib-docker_${{ steps.build_ipk.outputs.tag_name }}_all.ipk
          asset_content_type: application/octet-stream
