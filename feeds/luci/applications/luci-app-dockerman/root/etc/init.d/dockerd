#!/bin/sh /etc/rc.common

USE_PROCD=1
START=99
NAME=dockerd_local
DOCKERD_CONF="/etc/docker/daemon.json"

append_list_item() {
	append "$2" "$1" "\",\""
}

get_config() {
	config_load $1
	config_get ea "local" ea
	config_get en_wan "local" en_wan
	config_get data_root "local" data_root '/opt/docker'
	config_get log_level "local" log_level 'warn'
	config_list_foreach "local" registry_mirrors append_list_item registry_mirrors
	config_list_foreach "local" hosts append_list_item hosts 
}

gen_config(){
	cat <<-EOF >$DOCKERD_CONF
{
	"data-root": "$data_root",
	"log-level": "$log_level",
	"registry-mirrors": ["$registry_mirrors"],
	"hosts": ["$hosts"]
}
EOF
sed -i 's/\[\"\"\]/\[\]/g' $DOCKERD_CONF
}

_start() {
	local nofile=$(cat /proc/sys/fs/nr_open)
	get_config dockerd
	gen_config
	if [ -n "$en_wan" ]; then
		iptables -D DOCKER-USER ! -i br-lan -m conntrack --ctstate NEW,INVALID -o docker0 -j DROP >/dev/null 2>&1
		iptables -D DOCKER-USER ! -i br-lan -m conntrack --ctstate ESTABLISHED,RELATED -o docker0 -j RETURN >/dev/null 2>&1
	else
		iptables -D DOCKER-USER ! -i br-lan -m conntrack --ctstate NEW,INVALID -o docker0 -j DROP >/dev/null 2>&1
		iptables -D DOCKER-USER ! -i br-lan -m conntrack --ctstate ESTABLISHED,RELATED -o docker0 -j RETURN >/dev/null 2>&1
		iptables -I DOCKER-USER ! -i br-lan -m conntrack --ctstate ESTABLISHED,RELATED -o docker0 -j RETURN >/dev/null 2>&1
		iptables -I DOCKER-USER ! -i br-lan -m conntrack --ctstate NEW,INVALID -o docker0 -j DROP >/dev/null 2>&1
	fi
	if [ -n "$ea" ]; then
		procd_open_instance $NAME
		procd_set_param stderr 1
		procd_set_param command /usr/bin/dockerd
		procd_set_param limits nofile="${nofile} ${nofile}"
		procd_close_instance
	fi
}

start_service() {
	_start
}

service_triggers() {
	procd_add_reload_trigger dockerd
}

reload_service() {
	restart
}
